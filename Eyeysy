local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Thunder X",
   LoadingTitle = "Thunder X",
   LoadingSubtitle = "Enjoy",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = ThunderX, -- Create a custom folder for your hub/game
      FileName = "ThunderX"
   },
   Discord = {
      Enabled = true,
      Invite = "VtFatfBFXS", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
local Tab = Window:CreateTab("User", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Main")
local Button = Tab:CreateButton({
   Name = "Mobile Keyboard",
   Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt", true))() 
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "Mobile Fly",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/Flexzstr/FlyScript/main/Beta"))() 
   
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "Rejoin",
   Callback = function()
   game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
    
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "Leave",
   Callback = function()
   game:shutdown()
   -- The function that takes place when the button is pressed
   end,
})
local Toggle = Tab:CreateToggle({
   Name = "Char",
   CurrentValue = true,
   Flag = "On", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game:GetService("StarterGui"):SetCoreGuiEnabled('Chat', true)&
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})
local Slider = Tab:CreateSlider({
   Name = "Speed",
   Range = {0, 100},
   Increment = 10,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Speed", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   local walkspeed = 16 
game:GetService("RunService").RenderStepped:Connect(function() 
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkspeed 
end)
    walkspeed = Value
   -- The function that takes place when the slider changes
   -- The variable (Value) is a number which correlates to the 
   -- The function that takes place when the slider changes
   -- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})
local Toggle = Tab:CreateToggle({
   Name = "Lights (press Q)",
   CurrentValue = false,
   Flag = "Bright", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   local mouse = game.Players.LocalPlayer:GetMouse()
 function Light() 
 player = game.Players.LocalPlayer 
 playerChar = player.Character 
 playerLight = playerChar.Torso:FindFirstChild("Light") 
     if playerLight then playerLight:Destroy() 
    else 
    light = Instance.new("SurfaceLight",playerChar:FindFirstChild("Torso")) 
    light.Name = "Light" 
    light.Range = 75 --Distance Of The Light
    light.Brightness = 15 --How bright For the Light
     light.Shadows = false 
     local play = Instance.new("Sound",playerChar:FindFirstChild("Head")) 
     play.SoundId = "http://www.roblox.com/asset/?id=198914875" 
     play:Play() 
    end 
end 
mouse.KeyDown:connect(function(key) 
key = key:lower() 
if key == "q" then 
Light() 
end 
end)
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})
